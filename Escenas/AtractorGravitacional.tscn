[gd_scene load_steps=7 format=1]

[ext_resource path="res://Sprites/Poderes/AtractorGravitacional.png" type="Texture" id=1]
[ext_resource path="res://Sounds/atractor.wav" type="Sample" id=2]

[sub_resource type="CircleShape2D" id=1]

custom_solver_bias = 0.0
radius = 107.468

[sub_resource type="GDScript" id=2]

resource/name = "AtractorGravitacional"
script/source = "extends \"res://Scripts/Poder.gd\"

var energia = preload(\"res://Scripts/Energia.gd\")
var activado = false
const TIEMPO = 4
var recolectora
var listaParticulas = []

func _ready():
	get_node(\"SamplePlayer\").play(\"atractor\")
	get_node(\"Timer\").set_wait_time(TIEMPO)
	set_process(true)
	pass

func _process(delta):
	if activado:
		set_global_pos(recolectora.get_global_pos())

func Inicializar():
	nombre = \"Atractor gravitacional\"
	detalle = \"Onda circular que atrae particulas de Iridio\"
	cooldown = 4
	var image = get_node(\"Sprite\").get_texture().get_data().get_rect(Rect2(210,0,70,70))
	textura = ImageTexture.new()
	textura.create_from_image(image,ImageTexture.STORAGE_RAW)
	textura_cd = \"res://Sprites/Poderes/AtractorGravitacional_CD.png\"
	return self

func Usar(rec):
	recolectora = rec
	activado = true
	get_node(\"Timer\").start()
	pass

func _on_Timer_timeout():
	activado = false
	queue_free()
	pass # replace with function body


func _on_AtractorGravitacional_area_enter( area ):
	if area extends energia:
		area.Atraer(recolectora)
	pass # replace with function body


func _on_AtractorGravitacional_area_exit( area ):
	if area extends energia:
		area.atraido = false
	pass # replace with function body
"

[sub_resource type="Animation" id=3]

resource/name = "Usado"
length = 0.5
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:region_rect")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 70, 70 ), Rect2( 70, 0, 70, 70 ), Rect2( 140, 0, 70, 70 ), Rect2( 210, 0, 70, 70 ), Rect2( 280, 0, 70, 70 ), Rect2( 350, 0, 70, 70 ) ]
}

[sub_resource type="SampleLibrary" id=4]

samples/atractor = {
"db": 10.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 2 )
}

[node name="AtractorGravitacional" type="Area2D"]

input/pickable = true
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
script/script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]

transform/pos = Vector2( 2.83278, 1.04132 )
transform/scale = Vector2( 3, 3 )
texture = ExtResource( 1 )
modulate = Color( 1, 1, 1, 0.284157 )
region = true
region_rect = Rect2( 0, 0, 70, 70 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="Timer" type="Timer" parent="."]

process_mode = 1
wait_time = 1.0
one_shot = false
autostart = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/Usado = SubResource( 3 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "Usado"

[node name="SamplePlayer" type="SamplePlayer" parent="."]

config/polyphony = 1
config/samples = SubResource( 4 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[connection signal="area_enter" from="." to="." method="_on_AtractorGravitacional_area_enter"]

[connection signal="area_exit" from="." to="." method="_on_AtractorGravitacional_area_exit"]

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]


