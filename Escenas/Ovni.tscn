[gd_scene load_steps=10 format=1]

[ext_resource path="res://Sprites/Enemigos/ufoBlue.png" type="Texture" id=1]
[ext_resource path="res://Sounds/explosion.wav" type="Sample" id=2]
[ext_resource path="res://Sounds/naveEnemiga.wav" type="Sample" id=3]
[ext_resource path="res://Sprites/Poderes/MisilExplosion.png" type="Texture" id=4]

[sub_resource type="CircleShape2D" id=1]

custom_solver_bias = 0.0
radius = 25.6965

[sub_resource type="GDScript" id=2]

resource/name = "Ovni"
script/source = "extends RigidBody2D

var disparo = preload(\"res://Escenas/DisparoOvni.tscn\")
var danio = 2
var dir
var vivo = true 
var VELOCIDAD = 100
var skins = [\"res://Sprites/Enemigos/ufoBlue.png\",\"res://Sprites/Enemigos/ufoRed.png\",\"res://Sprites/Enemigos/ufoGreen.png\",\"res://Sprites/Enemigos/ufoYellow.png\"]

func _ready():
	randomize()
	var nuevoTiempo = 2 + randi() % 6
	get_node(\"Timer\").set_wait_time(nuevoTiempo)
	var num_x = rand_range(-1,1)
	var num_y = rand_range(-1,1)
	dir = Vector2(num_x,num_y).normalized()
	var num = randi() % skins.size()
	get_node(\"Sprite\").set_texture(load(skins[num]))
	Inicializar()
	pass

func Inicializar():
	set_process(true)

func sonido():
	get_node(\"SamplePlayer2D\").play(\"naveEnemiga\")

func _process(delta):
	if vivo:
		CalcularPantalla()
		translate(dir*VELOCIDAD*delta)

func CalcularPantalla():
	var pos_x = get_global_pos().x
	var pos_y = get_global_pos().y
	var pantalla = get_viewport_rect().size
	if pos_x > pantalla.x:
		set_global_pos(Vector2(0,pos_y))
	if pos_y > pantalla.y:
		set_global_pos(Vector2(pos_x,0))
	if pos_x < 0:
		set_global_pos(Vector2(pantalla.x,pos_y))
	if pos_y < 0:
		set_global_pos(Vector2(pos_x,pantalla.y))

func Destruir():
	if vivo:
		vivo = false
		get_node(\"SamplePlayer2D\").play(\"explosion\")
		get_node(\"AnimationPlayer\").play(\"Destruir\")
		global.puntaje += 1000
		global.contadorEnemigos -= 1

func Daniar():
	if vivo:
		vivo = false
		global.contadorEnemigos -= 1
		queue_free()
	return danio


func _on_Timer_timeout():
	randomize()
	var nuevoTiempo = 2 + randi() % 6
	get_node(\"Timer\").set_wait_time(nuevoTiempo)
	var misil = disparo.instance()
	get_tree().get_root().add_child(misil)
	misil.set_global_pos(self.get_global_pos())
	pass # replace with function body
"

[sub_resource type="SampleLibrary" id=3]

samples/explosion = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 2 )
}
samples/naveEnemiga = {
"db": 2.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 3 )
}

[sub_resource type="Animation" id=4]

resource/name = "Destruir"
length = 0.7
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visibility/visible")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 0.1 ),
"transitions": FloatArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("explosion:texture")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 4 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("explosion:region")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("explosion:region_rect")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 100, 100 ), Rect2( 100, 0, 100, 100 ), Rect2( 200, 0, 100, 100 ), Rect2( 300, 0, 100, 100 ), Rect2( 400, 0, 100, 100 ), Rect2( 500, 0, 100, 100 ), Rect2( 600, 0, 100, 100 ), Rect2( 700, 0, 100, 100 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0.7 ),
"transitions": FloatArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("explosion:visibility/visible")
tracks/5/interp = 1
tracks/5/imported = false
tracks/5/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=5]

length = 3.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:transform/rot")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 1.5, 3 ),
"transitions": FloatArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 180.0, 360.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:visibility/visible")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"values": [ {
"args": [  ],
"method": "sonido"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("explosion:visibility/visible")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}

[node name="Ovni" type="RigidBody2D" groups=[
"destruible",
"wip",
]]

input/pickable = true
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
collision/layers = 1
collision/mask = 1
mode = 3
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 0
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
velocity/linear = Vector2( 0, 0 )
velocity/angular = 0.0
damp_override/linear = -1.0
damp_override/angular = -1.0
script/script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]

transform/scale = Vector2( 0.6, 0.6 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="SamplePlayer2D" type="SamplePlayer2D" parent="."]

params/volume_db = 0.0
params/pitch_scale = 1.0
params/attenuation/min_distance = 1.0
params/attenuation/max_distance = 2048.0
params/attenuation/distance_exp = 1.0
config/polyphony = 2
config/samples = SubResource( 3 )
config/pitch_random = 0.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/Destruir = SubResource( 4 )
anims/Idle = SubResource( 5 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "Idle"

[node name="explosion" type="Sprite" parent="."]

texture = ExtResource( 4 )
region = true
region_rect = Rect2( 0, 0, 100, 100 )

[node name="Timer" type="Timer" parent="."]

process_mode = 1
wait_time = 3.0
one_shot = false
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]


