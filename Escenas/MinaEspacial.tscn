[gd_scene load_steps=9 format=1]

[ext_resource path="res://Sprites/Poderes/MinaEspacial.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Poderes/MinaExplosion.png" type="Texture" id=2]
[ext_resource path="res://Sounds/explosion.wav" type="Sample" id=3]

[sub_resource type="CircleShape2D" id=1]

custom_solver_bias = 0.0
radius = 49.4211

[sub_resource type="GDScript" id=2]

resource/name = "MinaEspacial"
script/source = "extends \"res://Scripts/Poder.gd\"

var pos_mouse = Vector2()
var activado = false
var dir
var back = false

func _ready():
	pass

func _process(delta):
	if (abs(get_global_pos().x - pos_mouse.x)>1 and abs(get_global_pos().y - pos_mouse.y)>1):
		translate(dir)
	pass

func Inicializar():
	nombre = \"Mina Espacial\"
	detalle = \"Mina que detecta la proximidad de enemigos y se detona\"
	cooldown = 2
	textura = get_node(\"Sprite\").get_texture()
	textura_cd = \"res://Sprites/Poderes/MinaEspacial_CD.png\"
	return self

func Disparar():
	var num = randi() % 2
	if num == 0:
		get_node(\"AnimationPlayer\").play_backwards(\"volar\")
	else:
		get_node(\"AnimationPlayer\").play(\"volar\")
	pos_mouse = get_global_mouse_pos()
	set_process(true)

func _on_MinaEspacial_body_enter( body ):
	if body.is_in_group(\"destruible\") and !activado:
		activado = true
		body.Destruir()
		get_node(\"SamplePlayer\").play(\"explosion\")
		get_node(\"AnimationPlayer\").play(\"explotar\")
	pass # replace with function body
"

[sub_resource type="Animation" id=3]

resource/name = "explotar"
length = 0.6
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 0,
"values": [ Color( 0.987079, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:texture")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:region")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:region_rect")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 70, 70 ), Rect2( 70, 0, 70, 70 ), Rect2( 140, 0, 70, 70 ), Rect2( 210, 0, 70, 70 ), Rect2( 280, 0, 70, 70 ), Rect2( 350, 0, 70, 70 ), Rect2( 410, 0, 70, 70 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0.6 ),
"transitions": FloatArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[sub_resource type="Animation" id=4]

length = 8.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 1, 2, 3, 4, 5, 6, 7 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.980469, 0.107239, 0.107239, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980469, 0.107239, 0.107239, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980469, 0.107239, 0.107239, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980469, 0.107239, 0.107239, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:transform/rot")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0, 4, 8 ),
"transitions": FloatArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 180.0, 360.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:texture")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:region")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="SampleLibrary" id=5]

samples/explosion = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 3 )
}

[node name="MinaEspacial" type="Area2D"]

input/pickable = true
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
script/script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]

transform/pos = Vector2( -0.112975, -0.643764 )
transform/rot = 98.4622
texture = ExtResource( 1 )
modulate = Color( 0.987079, 1, 1, 1 )
region_rect = Rect2( 410, 0, 70, 70 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/explotar = SubResource( 3 )
anims/volar = SubResource( 4 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "volar"

[node name="SamplePlayer" type="SamplePlayer" parent="."]

config/polyphony = 1
config/samples = SubResource( 5 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[connection signal="body_enter" from="." to="." method="_on_MinaEspacial_body_enter"]


